const path = require('path');

// SAUCE_USERNAME and SAUCE_ACCESS_KEY have to be set as env variables so Sauce Connect can use them as well.
// If you'll set them here directly, you'll get cryptic `Could not start Sauce Connect` error.
const sauceUsername = process.env.SAUCE_USERNAME;
const sauceAccessKey = process.env.SAUCE_ACCESS_KEY;
const isLocalRun = sauceUsername === undefined || sauceAccessKey === undefined;

const customLaunchers = isLocalRun ? {} : require('./browsers.js');
const browsers = isLocalRun ? ['ChromeHeadless'] : Object.keys(customLaunchers);

const plugins = ['karma-mocha', 'karma-chai', 'karma-sinon', 'karma-mocha-reporter'];
const reporters = ['mocha'];

if (isLocalRun) {
  plugins.push('karma-chrome-launcher');
} else {
  plugins.push('karma-sauce-launcher');
  reporters.push('saucelabs');
}

const files = [
  // Files common across all test-cases (polyfills, setup, loader, sdk), but not tests themselves
  { pattern: path.resolve(__dirname, 'artifacts/!(tests).js'), included: false },
  // Files used to trigger errors/provide data
  { pattern: path.resolve(__dirname, 'subjects/*'), included: false },
  // HTML shells for all test suites
  { pattern: path.resolve(__dirname, 'variants/*'), included: false },
  // Tests themselves - only this file is included in the index.html generated by Mocha
  { pattern: path.resolve(__dirname, 'artifacts/tests.js'), included: true },
];

module.exports = config => {
  if (isLocalRun) {
    console.log(`
╔══════════════════════════════════════════════════════════╗
║ INFO: Running integration tests in the local environment ║
╚══════════════════════════════════════════════════════════╝
`);
  } else {
    console.log(`
╔══════════════════════════════════════════════════════════════╗
║ INFO: Running integration tests in the SauceLabs environment ║
╚══════════════════════════════════════════════════════════════╝
`);
  }

  config.set({
    logLevel: process.env.DEBUG ? config.LOG_DEBUG : config.LOG_INFO,
    colors: true,
    singleRun: true,
    autoWatch: false,
    basePath: __dirname,
    proxies: {
      '/variants/': '/base/variants/',
      '/subjects/': '/base/subjects/',
      '/artifacts/': '/base/artifacts/',
      // Required for non-string fetch url test
      '/variants/123': '/base/subjects/123',
    },
    frameworks: ['mocha', 'chai', 'sinon'],
    files,
    plugins,
    reporters,
    customLaunchers,
    browsers,
    // concurrency: isLocalRun ? Infinity : 1,
    client: {
      mocha: {
        reporter: 'html',
        ui: 'bdd',
      },
    },
    build: process.env.TRAVIS_BUILD_NUMBER,
    // SauceLabs allows for 2 tunnels only, therefore some browsers will have to wait
    // rather long time. Plus mobile emulators tend to require a lot of time to start up.
    // 10 minutes should be more than enough to run all of them.
    // browserNoActivityTimeout: 600000,
    // browserDisconnectTimeout: 60000,
    // captureTimeout: 600000,
    captureTimeout: 600000,
    retryLimit: 1,
    browserDisconnectTimeout: 90000,
    browserDisconnectTolerance: 1,
    browserNoActivityTimeout: 90000,
    sauceLabs: {
      startConnect: !isLocalRun,
      // Just something "random" so we don't have to provide additional ENV var when running locally
      tunnelIdentifier: process.env.TRAVIS_JOB_NUMBER || Math.ceil(Math.random() * 1337),
      testName: '@sentry/browser' + (process.env.TRAVIS_JOB_NUMBER ? ' #' + process.env.TRAVIS_JOB_NUMBER : ''),
      public: 'public',
      recordScreenshots: false,
      recordVideo: false,
    },
  });
};
